<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybtis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.stackoverflow.cms.dao.UserDAO">

    <resultMap id="baseMap" type="net.stackoverflow.cms.model.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="enabled" column="enabled"/>
        <result property="email" column="email"/>
        <result property="telephone" column="telephone"/>
        <result property="deletable" column="deletable"/>
    </resultMap>

    <sql id="columns">
        id, username, password, enabled, email, telephone, deletable
    </sql>

    <sql id="columns_value">
        #{id}, #{username}, #{password}, #{email}, #{telephone}, #{enabled}, #{deletable}
    </sql>

    <sql id="columns_item_value">
        #{item.id},#{item.username},#{item.password},#{item.email},#{item.telephone},#{item.enabled},#{item.deletable}
    </sql>

    <select id="selectByPage" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.User">
        select * from user
        <where>
            <if test="condition != null">
                <if test="condition.id != null">
                    id = #{condition.id}
                </if>
                <if test="condition.username != null">
                    and username = #{condition.username}
                </if>
                <if test="condition.enabled != null">
                    and enabled = #{condition.enabled}
                </if>
                <if test="condition.email != null">
                    and email = #{condition.email}
                </if>
                <if test="condition.telephone != null">
                    and telephone = #{condition.telephone}
                </if>
                <if test="condition.deletable != null">
                    and deletable = #{condition.deletable}
                </if>
                <if test="condition.ids != null">
                    and id in
                    <foreach collection="condition.ids" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
            </if>
            <if test="key != null">
                and (username like CONCAT('%',#{key},'%') or email like CONCAT('%',#{key},'%') or telephone like
                CONCAT('%',#{key},'%'))
            </if>
        </where>
        <if test="order != null and sort != null">
            order by ${sort} ${order}
        </if>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>

    <select id="selectByCondition" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.User">
        select * from user
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="email != null">
                and email = #{email}
            </if>
            <if test="telephone != null">
                and telephone = #{telephone}
            </if>
            <if test="deletable != null">
                and deletable = #{deletable}
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="select" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.User">
        select * from user where id = #{id}
    </select>

    <insert id="insert" parameterType="net.stackoverflow.cms.model.entity.User">
        insert into user (<include refid="columns"/>) values (<include refid="columns_value"/>)
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into user (<include refid="columns"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (<include refid="columns_item_value"/>)
        </foreach>
    </insert>

    <delete id="delete" parameterType="string">
        delete from user where id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        delete from user where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="net.stackoverflow.cms.model.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="telephone != null">
                telephone = #{telephone},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="deletable != null">
                deletable = #{deletable}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update user
            <set>
                <if test="item.username != null">
                    username = #{item.username},
                </if>
                <if test="item.password != null">
                    password = #{item.password},
                </if>
                <if test="item.email != null">
                    email = #{item.email},
                </if>
                <if test="item.telephone != null">
                    telephone = #{item.telephone},
                </if>
                <if test="item.enabled != null">
                    enabled = #{item.enabled},
                </if>
                <if test="item.deletable != null">
                    deletable = #{item.deletable}
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

</mapper>