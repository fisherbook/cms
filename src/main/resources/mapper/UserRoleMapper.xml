<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybtis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.stackoverflow.cms.dao.UserRoleDAO">

    <resultMap id="baseMap" type="userRole">
        <id property="id" column="id"></id>
        <result property="userId" column="user_id"></result>
        <result property="roleId" column="role_id"></result>
    </resultMap>

    <select id="selectByPage" resultMap="baseMap" resultType="userRole">
        select * from user_role
        <where>
            <if test="searchMap != null">
                <if test="searchMap.ids != null">
                    id in
                    <foreach collection="searchMap.ids" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
                <if test="searchMap.userId != null">
                    and user_id = #{searchMap.userId}
                </if>
                <if test="searchMap.roleId != null">
                    and role_id = #{searchMap.roleId}
                </if>
            </if>
            <if test="key != null">
                and (user_id like CONCAT('%',#{key},'%') or role_id like CONCAT('%',#{key},'%'))
            </if>
        </where>
        order by ${order} ${sort} limit ${offset},${limit}
    </select>

    <select id="selectByCondition" resultMap="baseMap" resultType="userRole">
        select * from user_role
        <where>
            <if test="ids != null">
                id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
        </where>
    </select>

    <select id="select" resultMap="baseMap" resultType="userRole">
        select * from user_role where id = #{id}
    </select>

    <insert id="insert" parameterType="userRole">
        insert into user_role (id,user_id,role_id)
        values (#{id},#{userId},#{roleId})
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into user_role (id,user_id,role_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.userId},#{item.roleId})
        </foreach>
    </insert>

    <delete id="delete" parameterType="string">
        delete from user_role where id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        delete from user_role where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="userRole">
        update user_role
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId}
            </if>
        </set>
        where id=#{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update user_role
            <set>
                <if test="item.userId != null">
                    user_id = #{item.userId},
                </if>
                <if test="item.roleId != null">
                    role_id = #{item.roleId}
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

</mapper>