<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.stackoverflow.cms.dao.MenuDAO">

    <resultMap type="net.stackoverflow.cms.model.entity.Menu" id="baseMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="key" column="key" jdbcType="VARCHAR"/>
        <result property="parent" column="parent" jdbcType="VARCHAR"/>
        <result property="ts" column="ts" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="columns">
        `id`, `title`, `key`, `parent`, `ts`        
    </sql>

    <sql id="columns_value">
        #{id}, #{title}, #{key}, #{parent}, #{ts}        
    </sql>

    <sql id="columns_item_value">
        #{item.id}, #{item.title}, #{item.key}, #{item.parent}, #{item.ts}        
    </sql>

    <sql id="where">
        <where>
            <if test="eqWrapper != null">
                <if test="eqWrapper.id != null">
                    and `id` = #{eqWrapper.id}
                </if>
                <if test="eqWrapper.title != null">
                    and `title` = #{eqWrapper.title}
                </if>
                <if test="eqWrapper.key != null">
                    and `key` = #{eqWrapper.key}
                </if>
                <if test="eqWrapper.parent != null">
                    and `parent` = #{eqWrapper.parent}
                </if>
                <if test="eqWrapper.ts != null">
                    and `ts` = #{eqWrapper.ts}
                </if>
            </if>
            <if test="neqWrapper != null">
                <if test="neqWrapper.id != null">
                    and `id` != #{neqWrapper.id}
                </if>
                <if test="neqWrapper.title != null">
                    and `title` != #{neqWrapper.title}
                </if>
                <if test="neqWrapper.key != null">
                    and `key` != #{neqWrapper.key}
                </if>
                <if test="neqWrapper.parent != null">
                    and `parent` != #{neqWrapper.parent}
                </if>
                <if test="neqWrapper.ts != null">
                    and `ts` != #{neqWrapper.ts}
                </if>
            </if>
            <if test="inWrapper != null">
                <if test="inWrapper.id != null and inWrapper.id.size() > 0">
                    and `id` in
                    <foreach collection="inWrapper.id" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
                <if test="inWrapper.title != null and inWrapper.title.size() > 0">
                    and `title` in
                    <foreach collection="inWrapper.title" item="title" open="(" separator="," close=")">
                        #{title}
                    </foreach>
                </if>
                <if test="inWrapper.key != null and inWrapper.key.size() > 0">
                    and `key` in
                    <foreach collection="inWrapper.key" item="key" open="(" separator="," close=")">
                        #{key}
                    </foreach>
                </if>
                <if test="inWrapper.parent != null and inWrapper.parent.size() > 0">
                    and `parent` in
                    <foreach collection="inWrapper.parent" item="parent" open="(" separator="," close=")">
                        #{parent}
                    </foreach>
                </if>
                <if test="inWrapper.ts != null and inWrapper.ts.size() > 0">
                    and `ts` in
                    <foreach collection="inWrapper.ts" item="ts" open="(" separator="," close=")">
                        #{ts}
                    </foreach>
                </if>
            </if>
            <if test="ninWrapper != null">
                <if test="ninWrapper.id != null and ninWrapper.id.size() > 0">
                    and `id` not in
                    <foreach collection="ninWrapper.id" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
                <if test="ninWrapper.title != null and ninWrapper.title.size() > 0">
                    and `title` not in
                    <foreach collection="ninWrapper.title" item="title" open="(" separator="," close=")">
                        #{title}
                    </foreach>
                </if>
                <if test="ninWrapper.key != null and ninWrapper.key.size() > 0">
                    and `key` not in
                    <foreach collection="ninWrapper.key" item="key" open="(" separator="," close=")">
                        #{key}
                    </foreach>
                </if>
                <if test="ninWrapper.parent != null and ninWrapper.parent.size() > 0">
                    and `parent` not in
                    <foreach collection="ninWrapper.parent" item="parent" open="(" separator="," close=")">
                        #{parent}
                    </foreach>
                </if>
                <if test="ninWrapper.ts != null and ninWrapper.ts.size() > 0">
                    and `ts` not in
                    <foreach collection="ninWrapper.ts" item="ts" open="(" separator="," close=")">
                        #{ts}
                    </foreach>
                </if>
            </if>
            <if test="keyWrapper != null and keyWrapper.size() > 0">
                <foreach collection="keyWrapper.entrySet()" index="k" item="columns">
                    <if test="columns != null and columns.size()> 0">
                        and
                        <foreach collection="columns" item="column" open="(" separator=" or " close=")">
                            `${column}` like CONCAT('%',#{k},'%')
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
    </sql>

    <select id="countByCondition" resultType="int">
        select COUNT(*) from `menu`
        <include refid="where"/>
    </select>

    <select id="select" resultMap="baseMap">
        select * from `menu` where `id` = #{id}
    </select>

    <select id="selectByCondition" resultMap="baseMap">
        select * from `menu`
        <include refid="where"/>
        <if test="sortWrapper != null and sortWrapper.size() > 0">
            order by
            <foreach collection="sortWrapper.entrySet()" index="k" item="v" separator=",">
                `${k}` ${v}
            </foreach>
        </if>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>

    <insert id="insert">
        insert into `menu`
        (<include refid="columns"/>)
        values
        (<include refid="columns_value"/>)
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into `menu`
        (<include refid="columns"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (<include refid="columns_item_value"/>)
        </foreach>
    </insert>

    <delete id="delete" parameterType="string">
        delete from `menu` where `id` = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        delete from `menu` where `id` in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByCondition">
        delete from `menu`
        <include refid="where"/>
    </delete>

    <update id="update" parameterType="net.stackoverflow.cms.model.entity.Menu">
        update `menu`
        <set>
            <if test="title != null">
                `title` = #{title},
            </if>
            <if test="key != null">
                `key` = #{key},
            </if>
            <if test="parent != null">
                `parent` = #{parent},
            </if>
            <if test="ts != null">
                `ts` = #{ts},
            </if>
        </set>
        where `id` = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update `menu`
            <set>
                <if test="item.title != null">
                    `title` = #{item.title},
                </if>
                <if test="item.key != null">
                    `key` = #{item.key},
                </if>
                <if test="item.parent != null">
                    `parent` = #{item.parent},
                </if>
                <if test="item.ts != null">
                    `ts` = #{item.ts},
                </if>
            </set>
            where `id` = #{item.id}
        </foreach>
    </update>

    <update id="updateByCondition">
        update `menu`
        <set>
            <if test="upWrapper != null">
                <if test="upWrapper.id != null">
                    `id` = #{upWrapper.id},
                </if>
                <if test="upWrapper.title != null">
                    `title` = #{upWrapper.title},
                </if>
                <if test="upWrapper.key != null">
                    `key` = #{upWrapper.key},
                </if>
                <if test="upWrapper.parent != null">
                    `parent` = #{upWrapper.parent},
                </if>
                <if test="upWrapper.ts != null">
                    `ts` = #{upWrapper.ts},
                </if>
            </if>
        </set>
        <include refid="where"/>
    </update>
</mapper>