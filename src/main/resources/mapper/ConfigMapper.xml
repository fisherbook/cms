<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybtis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.stackoverflow.cms.dao.ConfigDAO">

    <resultMap id="baseMap" type="net.stackoverflow.cms.model.entity.Config">
        <id property="id" column="id"/>
        <result property="key" column="key"/>
        <result property="value" column="value"/>
    </resultMap>

    <sql id="columns">
        id,`key`,`value`
    </sql>

    <sql id="columns_value">
        #{id},#{key},#{value}
    </sql>

    <sql id="columns_item_value">
        #{item.id},#{item.key},#{item.value}
    </sql>

    <select id="selectByPage" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.Config">
        select * from config
        <where>
            <if test="condition != null">
                <if test="condition.id != null">
                    id = #{condition.id}
                </if>
                <if test="condition.key != null">
                    and `key` = #{condition.key}
                </if>
                <if test="condition.value != null">
                    and `value` = #{condition.value}
                </if>
                <if test="condition.ids != null">
                    and id in
                    <foreach collection="condition.ids" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
            </if>
            <if test="key != null">
                and (`key` like CONCAT('%',#{key},'%') or `value` like CONCAT('%',#{key},'%'))
            </if>
        </where>
        <if test="order != null and sort != null">
            order by ${sort} ${order}
        </if>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>

    <select id="selectByCondition" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.Config">
        select * from config
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="key != null">
                and `key` = #{key}
            </if>
            <if test="value != null">
                and `value` = #{value}
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="select" resultMap="baseMap" resultType="net.stackoverflow.cms.model.entity.Config">
        select * from config where id = #{id}
    </select>

    <insert id="insert" parameterType="net.stackoverflow.cms.model.entity.Config">
        insert into config (<include refid="columns"/>) values (<include refid="columns_value"/>)
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into config (<include refid="columns"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (<include refid="columns_item_value"/>)
        </foreach>
    </insert>

    <delete id="delete" parameterType="string">
        delete from config where id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        delete from config where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="net.stackoverflow.cms.model.entity.Config">
        update config
        <set>
            <if test="key != null">
                `key` = #{key},
            </if>
            <if test="value != null">
                `value` = #{value}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update config
            <set>
                <if test="item.key != null">
                    `key` = #{item.key},
                </if>
                <if test="item.value != null">
                    `value` = #{item.value}
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

</mapper>